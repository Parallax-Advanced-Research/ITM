# coding: utf-8

"""
    Insurance Policy Schema

    OpenAPI schema defining insurance-related decision-making structures.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr

class State(BaseModel):
    """
    State
    """
    id_: Optional[StrictStr] = Field(default=None, description="Unique identifier for the state")
    time_: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Time associated with the state")
    __properties = ["id_", "time_"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> State:
        """Create an instance of State from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> State:
        """Create an instance of State from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return State.parse_obj(obj)

        _obj = State.parse_obj({
            "id_": obj.get("id_"),
            "time_": obj.get("time_")
        })
        return _obj


