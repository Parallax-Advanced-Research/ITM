diff --git a/swagger_server/itm/itm_action_handler.py b/swagger_server/itm/itm_action_handler.py
index 9d343d0..207cdd3 100644
--- a/swagger_server/itm/itm_action_handler.py
+++ b/swagger_server/itm/itm_action_handler.py
@@ -214,9 +214,6 @@ class ITMActionHandler:
                     if self._proper_treatment(supply_used, injury.name, injury.location):
                         injury.status = InjuryStatusEnum.TREATED
 
-        if not attempted_treatment: # Realize the injury is already treated, but no vital/injury discovery happens
-            return self.times_dict["treatmentTimes"]["ALREADY_TREATED"]
-
         # Decrement unreusable supplies and increment time passed during treatment, even if the injury is untreated
         time_passed = 0
         for supply in self.session.state.supplies:
@@ -227,6 +224,9 @@ class ITMActionHandler:
                     time_passed = self.times_dict["treatmentTimes"][supply_used]
                 break
 
+        if not attempted_treatment: # Realize the injury is already treated, but no vital/injury discovery happens
+            return self.times_dict["treatmentTimes"]["ALREADY_TREATED"]
+
         # Injuries and certain basic vitals are discovered when a character is treated.
         for isd_character in self.current_scene.state.characters:
             if isd_character.id == character.id:
diff --git a/swagger_server/itm/itm_scenario.py b/swagger_server/itm/itm_scenario.py
index f927221..a28fd17 100644
--- a/swagger_server/itm/itm_scenario.py
+++ b/swagger_server/itm/itm_scenario.py
@@ -58,12 +58,12 @@ class ITMScenario:
         self.id = scenario.id
         self.name = scenario.name
 
-        if not self.training:
+        if 'eval' in self.yaml_path:
             self.alignment_target_reader = ITMAlignmentTargetReader(self.yaml_path + "alignment_target.yaml")
 
         if self.session.ta1_integration:
             self.ta1_controller = ITMTa1Controller(
-                self.alignment_target_reader.alignment_target.id if not self.training else None,
+                self.alignment_target_reader.alignment_target.id if self.alignment_target_reader is not None else None,
                 self.scene_type
             )
 
diff --git a/swagger_server/itm/itm_session.py b/swagger_server/itm/itm_session.py
index 9c7294e..b9ff245 100644
--- a/swagger_server/itm/itm_session.py
+++ b/swagger_server/itm/itm_session.py
@@ -198,7 +198,7 @@ class ITMSession:
                     break
                 index += 1
             if self.itm_scenario is None:
-                return f'Scenario ID `{scenario_id}` does not exist as {"a training" if self.kdma_training else "an eval"} scenario for `{self.session_type}`', 404
+                return f'Scenario ID `{scenario_id}` does not exist as {"a training" if session_type != "eval" else "an eval"} scenario for `{self.session_type}`', 404
             if self.itm_scenario.isd.current_scene.state is None:
                 return self._end_session() # We have already run the specified scenario to completion
         else:
@@ -316,7 +316,7 @@ class ITMSession:
                 self.session_id)
 
         yaml_paths = []
-        yaml_path = "swagger_server/itm/itm_" + ("training_scenarios/" if self.kdma_training else "eval_scenarios/")
+        yaml_path = "swagger_server/itm/itm_" + ("training_scenarios/" if session_type != "eval" else "eval_scenarios/")
         if session_type == 'soartech' or session_type == 'eval':
             yaml_paths.append(yaml_path + 'soartech/')
         if session_type == 'adept' or session_type == 'eval':
