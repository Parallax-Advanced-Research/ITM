# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

#image: python:3.10
#image: ubuntu:latest
image: registry.basic-research.parallaxgc.org/github-mirrors/itm/ci:latest

stages:
#- build
- test
- individual_tests
#- deploy
#- review
#- dast
#- staging
#- canary
#- production
#- incremental rollout 10%
#- incremental rollout 25%
#- incremental rollout 50%
#- incremental rollout 100%
#- performance
#- cleanup
#sast:
#  stage: test

include:
#- template: Auto-DevOps.gitlab-ci.yml
 - template: Jobs/SAST.gitlab-ci.yml
 - template: Jobs/Secret-Detection.gitlab-ci.yml

before_script:
  - cd
  - mkdir -p "$HOME/.ssh"
  - echo "$CI_ACCESS_KEY" > "$HOME/.ssh/id_rsa"
  - chmod 600 "$HOME/.ssh/id_rsa"
  - echo "$HOME"
  - ls -l "$HOME/.ssh"
  - CI/install_libs.sh
  - python install.py
  - wc "$HOME/.ssh/id_rsa"
  - md5sum "$HOME/.ssh/id_rsa"
  - cat "$HOME/.ssh/id_rsa"
  - git clone -v git@github.com:ITM-Soartech/ta1-server-mvp.git foobar # TODO: remove once it works in install.py.
  - source venv/bin/activate

lint_tools:
  stage: test
  allow_failure: true
  script:
    - python run_tests.py --notest

unit_tests:
  stage: test
  script:
    - python run_tests.py --nolint -v

integration_test:
  stage: test
  script:
    - python run-servers.py
    - sleep 2 # TODO: race condition. run-servers should not exit until servers are listening to their ports
    - python tad_tester.py --no-verbose --session_type soartech
    - python stop-servers.py
  # TODO: run separate jobs with various --no-foo options, so we can see what specifically fails?
  # Ideally, only do that if the single everything job fails.
  # TODO: can't rely on constant output, since decisions change as TAD is improved, but should be able sanity check it somewhat

