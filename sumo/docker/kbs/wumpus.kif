(instance g00 square)
(instance g01 square)
(instance g02 square)
(instance g03 square)
(instance g10 square)
(instance g11 square)
(instance g12 square)
(instance g13 square)
(instance g20 square)
(instance g21 square)
(instance g22 square)
(instance g23 square)
(instance g30 square)
(instance g31 square)
(instance g32 square)
(instance g33 square)
(instance wall square)

(not (equal g00 g01))
(not (equal g00 g02))
(not (equal g00 g03))
(not (equal g00 g10))
(not (equal g00 g11))
(not (equal g00 g12))
(not (equal g00 g13))
(not (equal g00 g20))
(not (equal g00 g21))
(not (equal g00 g22))
(not (equal g00 g23))
(not (equal g00 g30))
(not (equal g00 g31))
(not (equal g00 g32))
(not (equal g00 g33))
(not (equal g00 wall))

(not (equal g01 g02))
(not (equal g01 g03))
(not (equal g01 g10))
(not (equal g01 g11))
(not (equal g01 g12))
(not (equal g01 g13))
(not (equal g01 g20))
(not (equal g01 g21))
(not (equal g01 g22))
(not (equal g01 g23))
(not (equal g01 g30))
(not (equal g01 g31))
(not (equal g01 g32))
(not (equal g01 g33))
(not (equal g01 wall))

(not (equal g02 g03))
(not (equal g02 g10))
(not (equal g02 g11))
(not (equal g02 g12))
(not (equal g02 g13))
(not (equal g02 g20))
(not (equal g02 g21))
(not (equal g02 g22))
(not (equal g02 g23))
(not (equal g02 g30))
(not (equal g02 g31))
(not (equal g02 g32))
(not (equal g02 g33))
(not (equal g02 wall))

(not (equal g03 g10))
(not (equal g03 g11))
(not (equal g03 g12))
(not (equal g03 g13))
(not (equal g03 g20))
(not (equal g03 g21))
(not (equal g03 g22))
(not (equal g03 g23))
(not (equal g03 g30))
(not (equal g03 g31))
(not (equal g03 g32))
(not (equal g03 g33))
(not (equal g03 wall))

(not (equal g10 g11))
(not (equal g10 g12))
(not (equal g10 g13))
(not (equal g10 g20))
(not (equal g10 g21))
(not (equal g10 g22))
(not (equal g10 g23))
(not (equal g10 g30))
(not (equal g10 g31))
(not (equal g10 g32))
(not (equal g10 g33))
(not (equal g10 wall))

(not (equal g11 g12))
(not (equal g11 g13))
(not (equal g11 g20))
(not (equal g11 g21))
(not (equal g11 g22))
(not (equal g11 g23))
(not (equal g11 g30))
(not (equal g11 g31))
(not (equal g11 g32))
(not (equal g11 g33))
(not (equal g11 wall))

(not (equal g12 g13))
(not (equal g12 g20))
(not (equal g12 g21))
(not (equal g12 g22))
(not (equal g12 g23))
(not (equal g12 g30))
(not (equal g12 g31))
(not (equal g12 g32))
(not (equal g12 g33))
(not (equal g12 wall))

(not (equal g13 g20))
(not (equal g13 g21))
(not (equal g13 g22))
(not (equal g13 g23))
(not (equal g13 g30))
(not (equal g13 g31))
(not (equal g13 g32))
(not (equal g13 g33))
(not (equal g13 wall))

(not (equal g20 g21))
(not (equal g20 g22))
(not (equal g20 g23))
(not (equal g20 g30))
(not (equal g20 g31))
(not (equal g20 g32))
(not (equal g20 g33))
(not (equal g20 wall))

(not (equal g21 g22))
(not (equal g21 g23))
(not (equal g21 g30))
(not (equal g21 g31))
(not (equal g21 g32))
(not (equal g21 g33))
(not (equal g21 wall))

(not (equal g22 g23))
(not (equal g22 g30))
(not (equal g22 g31))
(not (equal g22 g32))
(not (equal g22 g33))
(not (equal g22 wall))

(not (equal g23 g30))
(not (equal g23 g31))
(not (equal g23 g32))
(not (equal g23 g33))
(not (equal g23 wall))

(not (equal g30 g31))
(not (equal g30 g32))
(not (equal g30 g33))
(not (equal g30 wall))

(not (equal g31 g32))
(not (equal g31 g33))
(not (equal g31 wall))

(not (equal g32 g33))
(not (equal g32 wall))

(instance neighbor TrinaryPredicate)
(domain neighbor 1 square)
(domain neighbor 2 orientation)
(domain neighbor 3 square)

(instance adjacent BinaryPredicate)
(domain adjacent 1 square)
(domain adjacent 2 square)

(<=>
  (neighbor ?X top ?Y)
  (neighbor ?Y bot ?X))

(<=>
  (neighbor ?X left ?Y)
  (neighbor ?Y right ?X))

(neighbor g03 bot g02)
(neighbor g02 bot g01)
(neighbor g01 bot g00)
(neighbor g13 bot g12)
(neighbor g12 bot g11)
(neighbor g11 bot g10)
(neighbor g23 bot g22)
(neighbor g22 bot g21)
(neighbor g21 bot g20)
(neighbor g33 bot g32)
(neighbor g32 bot g31)
(neighbor g31 bot g30)

(neighbor g00 right g10)
(neighbor g01 right g11)
(neighbor g02 right g12)
(neighbor g03 right g13)
(neighbor g10 right g20)
(neighbor g11 right g21)
(neighbor g12 right g22)
(neighbor g13 right g23)
(neighbor g20 right g30)
(neighbor g21 right g31)
(neighbor g22 right g32)
(neighbor g23 right g33)

(neighbor wall bot g03)
(neighbor wall bot g13)
(neighbor wall bot g23)
(neighbor wall bot g33)

(neighbor wall top g00)
(neighbor wall top g10)
(neighbor wall top g20)
(neighbor wall top g30)

(neighbor wall right g00)
(neighbor wall right g01)
(neighbor wall right g02)
(neighbor wall right g03)

(neighbor wall left g30)
(neighbor wall left g31)
(neighbor wall left g32)
(neighbor wall left g33)

(=>
  (and
    (instance ?V square)
    (attribute ?V wumpus)
    (neighbor ?V ?X ?W)
    (instance ?W square)
    (not (equal ?W wall)))
  (attribute ?W stench))

(=>
  (and
    (instance ?V square)
    (attribute ?V pit)
    (adjacent ?V ?W)
    (instance ?W square)
    (not (equal ?W wall)))
  (attribute ?W breeze))

(<=>
  (and
    (instance ?X square)
    (not (attribute ?X wumpus))
    (not (attribute ?X pit)))
  (attribute ?X safe))

(=>
  (and
    (instance ?V square)
    (instance ?W square)
    (instance ?X square)
    (instance ?Y square)
    (instance ?Z square)
    (attribute ?V stench)
    (not (equal ?V wall))
    (not (equal ?V ?W))
    (not (equal ?V ?X))
    (not (equal ?V ?Y))
    (not (equal ?W ?X))
    (not (equal ?W ?Y))
    (not (equal ?W ?Z))
    (not (equal ?X ?Y))
    (not (equal ?X ?Z))
    (not (equal ?Y ?Z))
    (adjacent ?V ?W)
    (adjacent ?V ?X)
    (adjacent ?V ?Y)
    (adjacent ?V ?Z)
    (not (attribute ?V wumpus))
    (not (attribute ?W wumpus))
    (not (attribute ?X wumpus))
    (not (attribute ?Y wumpus)))
  (attribute ?Z wumpusfound))

(=>
  (and
    (instance ?V square)
    (instance ?W square)
    (instance ?X square)
    (instance ?Y square)
    (instance ?Z square)
    (attribute ?V breeze)
    (not (equal ?V wall))
    (not (equal ?V ?W))
    (not (equal ?V ?X))
    (not (equal ?V ?Y))
    (not (equal ?W ?X))
    (not (equal ?W ?Y))
    (not (equal ?W ?Z))
    (not (equal ?X ?Y))
    (not (equal ?X ?Z))
    (not (equal ?Y ?Z))
    (adjacent ?V ?W)
    (adjacent ?V ?X)
    (adjacent ?V ?Y)
    (adjacent ?V ?Z)
    (not (attribute ?V pit))
    (not (attribute ?W pit))
    (not (attribute ?X pit))
    (not (attribute ?Y pit)))
  (attribute ?Z pitfound))

;not a wall
(=>
    (and
        (instance ?P1 square)
	(instance ?P2 square)
	(action walk ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (neighbor ?P1 ?D ?P2)
        (not (equal wall ?P2))
        (time ?T1 ?T2))
    (and
      (player_at ?P2 ?T2)
      (player_facing ?D ?T2)))

;wall
(=>
    (and
        (instance ?P1 square)
	(instance ?P2 square)
	(action walk ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (neighbor ?P1 ?D ?P2)
        (equal wall ?P2)
        (time ?T1 ?T2))
    (and
      (player_at ?P1 ?T2)
      (player_facing ?D ?T2)))


; facing right
(=>
    (and
        (instance ?P1 square)
	(action cw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D right))
  (and
    (player_at ?P1 ?T2)
    (player_facing bot ?T2)))

(=>
    (and
        (instance ?P1 square)
	(action ccw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D right))
  (and
    (player_at ?P1 ?T2)
    (player_facing top ?T2)))

; facing top
(=>
    (and
        (instance ?P1 square)
	(action cw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D top))
  (and
    (player_at ?P1 ?T2)
    (player_facing right ?T2)))

(=>
    (and
        (instance ?P1 square)
	(action ccw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D top))
  (and
    (player_at ?P1 ?T2)
    (player_facing left ?T2)))

; facing left
(=>
    (and
        (instance ?P1 square)
	(action cw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D left))
  (and
    (player_at ?P1 ?T2)
    (player_facing top ?T2)))

(=>
    (and
        (instance ?P1 square)
	(action ccw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D left))
  (and
    (player_at ?P1 ?T2)
    (player_facing bot ?T2)))

; facing bot
(=>
    (and
        (instance ?P1 square)
	(action cw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D bot))
  (and
    (player_at ?P1 ?T2)
    (player_facing left ?T2)))

(=>
    (and
        (instance ?P1 square)
	(action ccw ?T1)
        (player_at ?P1 ?T1)
        (player_facing ?D ?T1)
        (time ?T1 ?T2)
        (equal ?D bot))
  (and
    (player_at ?P1 ?T2)
    (player_facing right ?T2)))